#!/usr/bin/env bash
# **** License ****
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# A copy of the GNU General Public License is available as
# '/usr/share/common-licenses/GPL' in the Debian GNU/Linux distribution
# or on the World Wide Web at `http://www.gnu.org/copyleft/gpl.html'.
# You can also obtain it by writing to the Free Software Foundation,
# Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.
#
# Author: Neil Beadle
# Date: September 2015
#
# **** End License ****
# Install dnsmasq ADBLOCK and blacklist blocking onto an EdgeMax router
# Use at your own risk
#

VERSION="v2.2"

# Uncomment for debugging or syntax checking
# set -x
# Syntax check - uncomment for non execution dry run:
# set -n

# Make sure script runs as root
if [[ ${EUID} != 0 ]]
then
	echo "This script must be run as root, use: [sudo $(pwd)/ersetup]"
	exit 1
fi

# Set up the Vyatta environment
source /opt/vyatta/etc/functions/script-template
OPRUN=/opt/vyatta/bin/vyatta-op-cmd-wrapper
CFGRUN=/opt/vyatta/sbin/vyatta-cfg-cmd-wrapper
API=/bin/cli-shell-api
shopt -s expand_aliases

alias begin='${CFGRUN} begin'
alias commit='${CFGRUN} commit'
alias copy='${CFGRUN} copy'
alias delete='${CFGRUN} delete'
alias discard='${CFGRUN} discard'
alias end='${CFGRUN} end'
alias save='${CFGRUN} save'
alias set='${CFGRUN} set'
alias version='${OPRUN} show version'

SHOWVER=$(version | sed 's/$/;/g')
BUILD=$(echo ${SHOWVER} | awk 'BEGIN {RS=";"} /Build ID:/ {print $3}')
VER=$(echo ${SHOWVER} | awk 'BEGIN {RS=";"} /Version:/ {print $2}')
ME="${0##*/} ${VERSION}: "
ERROR=0


# Check version and set up environment
is_version ()
{
	# v1.2.0: build 4574253
	# v1.4.1: build 4648309
	# v1.5.0: build 4677648
	# v1.6.0: build 4716006
	# v1.7.0: build 4783374

	if [[ ${BUILD} > 4716006 ]]   # Script is only supported on OS v1.6.0 & above
	then
		return 0
	else
		return 1
	fi
}


# Make sure we clean up session on deliberate and accidental exits
atexit ()
{
	end
}

# Install adblock and bogon support
install_adblock_support ()
{
	SCRIPTS="/config/scripts"
	ADBLOCK="update-blacklists-dnsmasq.pl"
	CFGDIR="/opt/vyatta/share/vyatta-cfg/templates"
	WWWDIR="/config/wizard/feature/ADBlock"
	GUI="GUI"
	ERROR=0

	if [[ ! -d "${SCRIPTS}" ]]
	then
		install -d -o root -g root -m 0755 "${SCRIPTS}/" || ERROR=1
	fi

	echo "Installing ${ADBLOCK} to ${SCRIPTS}/"
	install -o root -g root -m 0755 "${ADBLOCK}" "${SCRIPTS}/${ADBLOCK}" || ERROR=1

	if [[ ! -d "${WWWDIR}/" ]]
	then
		install -d -o www-data -g users -m 0755 "${WWWDIR}/" || ERROR=1
	fi

# 	for i in "${GUI}/"*
# 	do
# 		install -o www-data -g users -m 0755 ${i} "${WWWDIR}/"$(basename ${i}) || ERROR=1
# 	done

	echo "Installing blacklist configuration templates for ${ADBLOCK}..."
	cp -rf service/ "${CFGDIR}/"

	echo "Opening EdgeMax configuration session..."
	begin || ERROR=1

	echo "Creating starter blacklists and task scheduler entry for ${ADBLOCK}..."
	set service dns forwarding blacklist enabled true  || ERROR=1
	set service dns forwarding blacklist blackhole 0.0.0.0 || ERROR=1
	set service dns forwarding blacklist exclude msdn.com || ERROR=1
	set service dns forwarding blacklist exclude appleglobal.112.2o7.net || ERROR=1
	set service dns forwarding blacklist exclude cdn.visiblemeasures.com || ERROR=1
	set service dns forwarding blacklist exclude hb.disney.go.com || ERROR=1
	set service dns forwarding blacklist exclude googleadservices.com || ERROR=1
	set service dns forwarding blacklist exclude hulu.com || ERROR=1
	set service dns forwarding blacklist exclude static.chartbeat.com || ERROR=1
	set service dns forwarding blacklist exclude survey.112.2o7.net || ERROR=1
	set service dns forwarding blacklist include beap.gemini.yahoo.com || ERROR=1
	set service dns forwarding blacklist source openphish.com description 'OpenPhish automatic phishing detection'
	set service dns forwarding blacklist source openphish.com prefix 'htt.*//'
	set service dns forwarding blacklist source openphish.com url 'https://openphish.com/feed.txt'
	set service dns forwarding blacklist source someonewhocares.org description 'Zero based host and domain list' || ERROR=1
	set service dns forwarding blacklist source someonewhocares.org prefix '0.0.0.0' || ERROR=1
	set service dns forwarding blacklist source someonewhocares.org url 'http://someonewhocares.org/hosts/zero/' || ERROR=1
	set service dns forwarding blacklist source winhelp2002.mvps.org description 'Zero based host and domain list' || ERROR=1
	set service dns forwarding blacklist source winhelp2002.mvps.org prefix '0.0.0.0' || ERROR=1
	set service dns forwarding blacklist source winhelp2002.mvps.org url 'http://winhelp2002.mvps.org/hosts.txt' || ERROR=1
	set service dns forwarding blacklist source www.malwaredomainlist.com description '127.0.0.1 based host and domain list' || ERROR=1
	set service dns forwarding blacklist source www.malwaredomainlist.com prefix '127.0.0.1' || ERROR=1
	set service dns forwarding blacklist source www.malwaredomainlist.com url 'http://www.malwaredomainlist.com/hostslist/hosts.txt' || ERROR=1
	set service dns forwarding blacklist source yoyo.org description 'Fully Qualified Domain Names only - no prefix to strip' || ERROR=1
	set service dns forwarding blacklist source yoyo.org prefix '' || ERROR=1
	set service dns forwarding blacklist source yoyo.org url 'http://pgl.yoyo.org/as/serverlist.php?hostformat=nohtml&showintro=1&mimetype=plaintext' || ERROR=1
	set service dns forwarding blacklist source zeustracker.abuse.ch/compromised description 'abuse.ch ZeuS compromised URL blacklist' || ERROR=1
	set service dns forwarding blacklist source zeustracker.abuse.ch/compromised prefix '' || ERROR=1
	set service dns forwarding blacklist source zeustracker.abuse.ch/compromised url 'https://zeustracker.abuse.ch/blocklist.php?download=compromised' || ERROR=1
	set service dns forwarding blacklist source zeustracker.abuse.ch/hostfile description 'abuse.ch ZeuS blocklist host file' || ERROR=1
	set service dns forwarding blacklist source zeustracker.abuse.ch/hostfile prefix '127.0.0.1' || ERROR=1
	set service dns forwarding blacklist source zeustracker.abuse.ch/hostfile url 'https://zeustracker.abuse.ch/blocklist.php?download=hostfile' || ERROR=1
	set system task-scheduler task update_blacklists executable path /config/scripts/update-blacklists-dnsmasq.pl || ERROR=1
	set system task-scheduler task update_blacklists interval 6h || ERROR=1

	echo "Committing configuration..."
	commit || ERROR=1

	echo "Saving configuration..."
	save || ERROR=1

	echo "Ending configuration session..."
	end || ERROR=1

	return ${ERROR}
}

# This is where we run the script using the above functions
trap atexit exit ${?}

if is_version
then
	echo "${ME}Installing ADBLOCK and Blacklist blocking dnsmasq support..."
	if install_adblock_support
	then
		echo "${ME}ADBLOCK and Blacklist blocking dnsmasq installation succeeded!"
	else
		echo "${ME}ADBLOCK and Blacklist blocking dnsmasq installation failed!"
	fi
else
	echo "${ME}Edgemax ${VER} is not supported, upgrade!"
fi
